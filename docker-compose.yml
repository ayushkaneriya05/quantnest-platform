# docker-compose.yml

services:
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  local-db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=quantnest
      - POSTGRES_PASSWORD=quantnest
      - POSTGRES_DB=quantnest_dev
    ports:
      - "5432:5432"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    # Use the Django development server for hot-reloading
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      # Sync your local backend code with the container
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    depends_on:
      - local-db
      - redis

  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    # Command to start the celery worker
    command: celery -A backend worker -l info
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    depends_on:
      - backend
      - redis

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    # Command to start the celery beat scheduler
    command: celery -A backend beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    depends_on:
      - backend
      - redis

volumes:
  postgres_data:
  redis_data:

