# This file configures your services on Render.
# It's a great practice for ensuring consistent environments.

services:
  # Backend - A Docker Web Service
  - type: web
    name: quantnest-backend
    env: docker
    repo: https://github.com/YOUR_GITHUB_USERNAME/quantnest # Change this
    region: singapore # Choose a region close to you/your users
    plan: free # or starter
    branch: main
    dockerfilePath: ./backend/Dockerfile
    healthCheckPath: /api/v1/health # Add a simple health check endpoint in Django
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: quantnest-supabase # Name of the database service below
          property: connectionString
      - key: SECRET_KEY
        generateValue: true # Let Render generate a strong secret key
      - key: FRONTEND_URL
        fromService:
          type: static
          name: quantnest-frontend
          property: url
      # Add other secrets (MONGO_DB_URL, CLOUDINARY_URL) in Render's UI under Environment

  # Frontend - A Static Site Service (more efficient than Docker for React)
  - type: static
    name: quantnest-frontend
    repo: https://github.com/YOUR_GITHUB_USERNAME/quantnest # Change this
    branch: main
    rootDir: frontend
    buildCommand: npm install && npm run build
    publishDir: build
    # Rewrite rule for Single Page Applications (SPAs)
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

databases:
  # This tells Render about your external Supabase DB.
  # The actual DB is not hosted on Render.
  - name: quantnest-supabase
    ipAllowList: [] # Allows access from anywhere, Render will connect